<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="GammaRayHelper_8cc" kind="file" language="C++">
    <compoundname>GammaRayHelper.cc</compoundname>
    <includes refid="GammaRayHelper_8hh" local="yes">GammaRayHelper.hh</includes>
    <includes local="yes">Randomize.hh</includes>
    <includes local="yes">G4Gamma.hh</includes>
    <includes local="yes">G4ParticleChangeForGamma.hh</includes>
    <includes local="yes">G4ProductionCutsTable.hh</includes>
    <includes local="yes">G4AutoLock.hh</includes>
    <includes local="yes">G4DynamicParticle.hh</includes>
    <includes local="yes">G4MaterialCutsCouple.hh</includes>
    <includes local="yes">G4LivermoreComptonModel.hh</includes>
    <includes local="yes">G4LivermoreRayleighModel.hh</includes>
    <includes local="no">thread</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="4">
        <label>ExtendedLivermoreComptonModel.hh</label>
        <link refid="ExtendedLivermoreComptonModel_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>GammaRayHelper.hh</label>
        <link refid="GammaRayHelper_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>Hit.hh</label>
        <link refid="Hit_8hh"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/GammaRayHelper.cc</label>
        <link refid="GammaRayHelper_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>G4Allocator.hh</label>
      </node>
      <node id="15">
        <label>G4AutoLock.hh</label>
      </node>
      <node id="14">
        <label>G4DataVector.hh</label>
      </node>
      <node id="6">
        <label>G4DynamicParticle.hh</label>
      </node>
      <node id="26">
        <label>G4Gamma.hh</label>
      </node>
      <node id="3">
        <label>G4LivermoreComptonModel.hh</label>
      </node>
      <node id="8">
        <label>G4LivermorePhotoElectricModel.hh</label>
      </node>
      <node id="9">
        <label>G4LivermoreRayleighModel.hh</label>
      </node>
      <node id="10">
        <label>G4Material.hh</label>
      </node>
      <node id="5">
        <label>G4MaterialCutsCouple.hh</label>
      </node>
      <node id="27">
        <label>G4ParticleChangeForGamma.hh</label>
      </node>
      <node id="12">
        <label>G4PhysicalConstants.hh</label>
      </node>
      <node id="28">
        <label>G4ProductionCutsTable.hh</label>
      </node>
      <node id="17">
        <label>G4Step.hh</label>
      </node>
      <node id="21">
        <label>G4String.hh</label>
      </node>
      <node id="13">
        <label>G4SystemOfUnits.hh</label>
      </node>
      <node id="22">
        <label>G4THitsCollection.hh</label>
      </node>
      <node id="11">
        <label>G4ThreeVector.hh</label>
      </node>
      <node id="16">
        <label>G4Track.hh</label>
      </node>
      <node id="7">
        <label>G4VEMDataSet.hh</label>
      </node>
      <node id="19">
        <label>G4VHit.hh</label>
      </node>
      <node id="25">
        <label>Randomize.hh</label>
      </node>
      <node id="23">
        <label>map</label>
      </node>
      <node id="24">
        <label>mutex</label>
      </node>
      <node id="29">
        <label>thread</label>
      </node>
      <node id="30">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceG4FastSim">G4FastSim</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="GammaRayHelper_8hh" kindref="compound">GammaRayHelper.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Randomize.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Gamma.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4ParticleChangeForGamma.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4ProductionCutsTable.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4AutoLock.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4DynamicParticle.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4MaterialCutsCouple.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4LivermoreComptonModel.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4LivermoreRayleighModel.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declare<sp/>the<sp/>mutex<sp/>globally<sp/>within<sp/>the<sp/>file<sp/>for<sp/>G4AutoLock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Mutex<sp/>mutex<sp/>=<sp/>G4MUTEX_INITIALIZER;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceG4FastSim" kindref="compound">G4FastSim</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="classGammaRayHelper" kindref="compound">GammaRayHelper</ref>&amp;<sp/><ref refid="classGammaRayHelper_1aa4d80bdef675e4eb3e2084e140521d55" kindref="member">GammaRayHelper::Instance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">thread_local</highlight><highlight class="normal"><sp/><ref refid="classGammaRayHelper" kindref="compound">GammaRayHelper</ref><sp/>instance;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//GammaRayHelper::GammaRayHelper()<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">GammaRayHelper::GammaRayHelper()<sp/>:<sp/>comptonModel(nullptr),<sp/>photoelectricModel(nullptr),<sp/>rayleighModel(nullptr),<sp/>cdfsInitialized(false)<sp/>{}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGammaRayHelper_1abaae1ae4a540ea36d89e6a3147ef3e7a" kindref="member">GammaRayHelper::Initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;GammaRayHelper::Initializing<sp/>Compton<sp/>and<sp/>photoelectric<sp/>models<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>comptonModel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classExtendedLivermoreComptonModel" kindref="compound">ExtendedLivermoreComptonModel</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>photoelectricModel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LivermorePhotoElectricModel();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>rayleighModel<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LivermoreRayleighModel();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>G4DataVector<sp/>cuts;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>cuts.push_back(0<sp/>*<sp/>keV);<sp/></highlight><highlight class="comment">//<sp/>Example<sp/>cut<sp/>value,<sp/>adjust<sp/>as<sp/>needed??<sp/>what<sp/>it<sp/>means?<sp/>find<sp/>out.....</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>comptonModel-&gt;Initialise(G4Gamma::Gamma(),<sp/>cuts);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>photoelectricModel-&gt;Initialise(G4Gamma::Gamma(),<sp/>cuts);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>rayleighModel-&gt;Initialise(G4Gamma::Gamma(),<sp/>cuts);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGammaRayHelper_1a46237b1c1462735a33f905e7aaa66676" kindref="member">GammaRayHelper::InitializeCDFs</ref>(G4double<sp/>energy)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>fInitialEnergy<sp/>=<sp/>energy;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cdfsInitialized)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGammaRayHelper_1abaae1ae4a540ea36d89e6a3147ef3e7a" kindref="member">Initialize</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fElementsUsed.clear();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4MaterialTable*<sp/>materialTable<sp/>=<sp/>G4Material::GetMaterialTable();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>materialTable-&gt;size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4Material*<sp/>material<sp/>=<sp/>(*materialTable)[i];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4ElementVector*<sp/>elementVector<sp/>=<sp/>material-&gt;GetElementVector();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>material-&gt;GetNumberOfElements();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Element*<sp/>elm<sp/>=<sp/>(*elementVector)[j];</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(fElementsUsed.begin(),<sp/>fElementsUsed.end(),<sp/>elm-&gt;GetName())<sp/>==<sp/>fElementsUsed.end())<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fElementsUsed.push_back(elm-&gt;GetName());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdfDataMap[elm]<sp/>=<sp/>CreateCDF(elm,<sp/>energy);<sp/></highlight><highlight class="comment">//<sp/>Create<sp/>initial<sp/>CDF<sp/>for<sp/>a<sp/>typical<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdfsInitialized<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">CDFData<sp/>GammaRayHelper::CreateCDF(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Element*<sp/>element,<sp/>G4double<sp/>energy)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>G4int<sp/>nPoints<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>cosThetaMin<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>cosThetaMax<sp/>=<sp/><sp/>1.0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>dCosTheta<sp/>=<sp/>(cosThetaMax<sp/>-<sp/>cosThetaMin)<sp/>/<sp/>nPoints;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;G4double&gt;<sp/>cdf(nPoints<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;G4double&gt;<sp/>cosTheta(nPoints<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(G4int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>nPoints;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>cosThetaVal<sp/>=<sp/>cosThetaMin<sp/>+<sp/>i<sp/>*<sp/>dCosTheta;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosTheta[i]<sp/>=<sp/>cosThetaVal;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>diffCrossSection<sp/>=<sp/>comptonModel-&gt;<ref refid="classExtendedLivermoreComptonModel_1a98a23482707a3aabe93e1e069414e171" kindref="member">DifferentialCrossSection</ref>(element,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4DynamicParticle(G4Gamma::Gamma(),<sp/>G4ThreeVector(1,0,0),<sp/>energy),<sp/>cosThetaVal)<sp/>*<sp/>dCosTheta;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>diffCrossSection;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdf[i]<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(G4int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>nPoints;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdf[i]<sp/>/=<sp/>sum;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>CDFData<sp/>cdfData;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>cdfData.cdf<sp/>=<sp/>cdf;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>cdfData.cosTheta<sp/>=<sp/>cosTheta;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cdfData;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">G4double<sp/><ref refid="classGammaRayHelper_1a9210941982409cb5cc915759d7a0472a" kindref="member">GammaRayHelper::GetComptonCrossSection</ref>(G4double<sp/>energy,<sp/>G4Material*<sp/>material)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4AutoLock<sp/>lock(&amp;mutex);<sp/>//<sp/>Ensure<sp/>thread-safe<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>crossSection<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4ElementVector*<sp/>elementVector<sp/>=<sp/>material-&gt;GetElementVector();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4double*<sp/>fractionVector<sp/>=<sp/>material-&gt;GetFractionVector();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>material-&gt;GetNumberOfElements();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Element*<sp/>element<sp/>=<sp/>(*elementVector)[i];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crossSection<sp/>+=<sp/>fractionVector[i]<sp/>*<sp/>comptonModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ());</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crossSection;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">G4double<sp/><ref refid="classGammaRayHelper_1a904bd1187ecd382072b9e98ac5051646" kindref="member">GammaRayHelper::GetPhotoelectricCrossSection</ref>(G4double<sp/>energy,<sp/>G4Material*<sp/>material)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4AutoLock<sp/>lock(&amp;mutex);<sp/>//<sp/>Ensure<sp/>thread-safe<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>crossSection<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4ElementVector*<sp/>elementVector<sp/>=<sp/>material-&gt;GetElementVector();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4double*<sp/>fractionVector<sp/>=<sp/>material-&gt;GetFractionVector();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>material-&gt;GetNumberOfElements();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Element*<sp/>element<sp/>=<sp/>(*elementVector)[i];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crossSection<sp/>+=<sp/>fractionVector[i]<sp/>*<sp/>photoelectricModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crossSection;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">G4double<sp/><ref refid="classGammaRayHelper_1a1dcb9b960c9c14b230ff4a1e26d3f012" kindref="member">GammaRayHelper::GetTotalCrossSection</ref>(G4double<sp/>energy,<sp/>G4Material*<sp/>material)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4AutoLock<sp/>lock(&amp;mutex);<sp/>//<sp/>Ensure<sp/>thread-safe<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>crossSection<sp/>=<sp/><ref refid="classGammaRayHelper_1a9210941982409cb5cc915759d7a0472a" kindref="member">GetComptonCrossSection</ref>(energy,<sp/>material)<sp/>+<sp/><ref refid="classGammaRayHelper_1a904bd1187ecd382072b9e98ac5051646" kindref="member">GetPhotoelectricCrossSection</ref>(energy,<sp/>material);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crossSection;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">G4double<sp/><ref refid="classGammaRayHelper_1aac1da704b4d19dc2aef4546db557cce9" kindref="member">GammaRayHelper::GetAttenuationLength</ref>(G4double<sp/>energy,<sp/>G4Material*<sp/>material)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4ElementVector*<sp/>elementVector<sp/>=<sp/>material-&gt;GetElementVector();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4double*<sp/>fractionVector<sp/>=<sp/>material-&gt;GetFractionVector();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>mass_attenuation<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>material-&gt;GetNumberOfElements();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Element*<sp/>element<sp/>=<sp/>(*elementVector)[i];</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4double<sp/>xsec<sp/>=<sp/>photoelectricModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ())<sp/>+<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comptonModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ())<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rayleighModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>xsec<sp/>=<sp/>photoelectricModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ())<sp/>+<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comptonModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>A<sp/>=<sp/>element-&gt;GetA();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;<sp/>Element:<sp/>&quot;<sp/>&lt;&lt;<sp/>element-&gt;GetName()<sp/>&lt;&lt;<sp/>&quot;<sp/>xsec:<sp/>&quot;<sp/>&lt;&lt;<sp/>xsec<sp/>&lt;&lt;<sp/>&quot;<sp/>A:<sp/>&quot;<sp/>&lt;&lt;<sp/>A<sp/>&lt;&lt;<sp/>G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phot<sp/><sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>comptonModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ())<sp/><sp/>&lt;&lt;<sp/>G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compt<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>comptonModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ())<sp/><sp/>&lt;&lt;<sp/>G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rayl<sp/><sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>rayleighModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ())<sp/><sp/>&lt;&lt;<sp/>G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>i&lt;&lt;&quot;<sp/>Element:<sp/>&quot;<sp/>&lt;&lt;<sp/>element-&gt;GetName()<sp/>&lt;&lt;<sp/>&quot;<sp/>xsec:<sp/>&quot;<sp/>&lt;&lt;<sp/>xsec<sp/>&lt;&lt;<sp/>&quot;<sp/>A:<sp/>&quot;<sp/>&lt;&lt;<sp/>A<sp/>&lt;&lt;<sp/>&quot;<sp/>r<sp/>=&quot;&lt;&lt;<sp/>comptonModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ())/xsec&lt;&lt;G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass_attenuation<sp/>+=<sp/>fractionVector[i]<sp/>*<sp/>xsec<sp/>*<sp/>Avogadro<sp/>/<sp/>A<sp/>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>rho<sp/>=<sp/>material-&gt;GetDensity();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>attenuationLength<sp/>=<sp/>1/(rho*mass_attenuation);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>&quot;Material:<sp/>&quot;<sp/>&lt;&lt;<sp/>material-&gt;GetName()<sp/>&lt;&lt;<sp/>G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>&quot;Energy:<sp/>&quot;<sp/>&lt;&lt;<sp/>energy/keV<sp/>&lt;&lt;<sp/>&quot;<sp/>keV&quot;&lt;&lt;G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>&quot;Density:<sp/>&quot;<sp/>&lt;&lt;<sp/>material-&gt;GetDensity()<sp/>/<sp/>(g<sp/>/<sp/>cm3)&lt;&lt;<sp/>&quot;<sp/>g/cm3&quot;&lt;&lt;<sp/>G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>&quot;Attenuation<sp/>length:<sp/>&quot;<sp/>&lt;&lt;<sp/>attenuationLength<sp/>/<sp/>cm&lt;&lt;<sp/>&quot;<sp/>cm&quot;&lt;&lt;G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>attenuationLength;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">G4double<sp/><ref refid="classGammaRayHelper_1aaa1dae5e87643fb8af5672b8d3cdf981" kindref="member">GammaRayHelper::GetMassAttenuationCoefficient</ref>(G4double<sp/>energy,<sp/>G4Material*<sp/>material)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>calculates<sp/>the<sp/>mass<sp/>attenuation<sp/>coefficient<sp/>for<sp/>a<sp/>given<sp/>material<sp/>at<sp/>a<sp/>given<sp/>energy.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="comment"></highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/><sp/>A.P.<sp/>Colijn,<sp/>2024</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>att<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4ElementVector*<sp/>elementVector<sp/>=<sp/>material-&gt;GetElementVector();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4double*<sp/>fractionVector<sp/>=<sp/>material-&gt;GetFractionVector();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>material-&gt;GetNumberOfElements();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Element*<sp/>element<sp/>=<sp/>(*elementVector)[i];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>A<sp/>=<sp/>element-&gt;GetAtomicMassAmu();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>sigma<sp/>=<sp/>photoelectricModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ());</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sigma<sp/>+=<sp/>comptonModel-&gt;ComputeCrossSectionPerAtom(G4Gamma::Gamma(),<sp/>energy,<sp/>element-&gt;GetZ());</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>100%<sp/>sure<sp/>about<sp/>this<sp/>conversion......<sp/>maybe<sp/>I<sp/>should<sp/>check<sp/>teh<sp/>units<sp/>of<sp/>teh<sp/>cross<sp/>section<sp/>routines.....</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>att<sp/>+=<sp/>fractionVector[i]<sp/>*<sp/>(sigma<sp/>/<sp/>A<sp/>)<sp/>*<sp/>cm2;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>att;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">std::pair&lt;G4double,G4double&gt;<sp/><ref refid="classGammaRayHelper_1a5984998d3bf8181e5ed84e0d26a0d9d0" kindref="member">GammaRayHelper::GenerateComptonAngle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Step*<sp/>step,<sp/>G4double<sp/>energy_max)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4MaterialCutsCouple*<sp/>couple<sp/>=<sp/>step-&gt;GetPreStepPoint()-&gt;GetMaterialCutsCouple();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>energy0<sp/>=<sp/>step-&gt;GetPreStepPoint()-&gt;GetKineticEnergy();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4ParticleDefinition*<sp/>particle<sp/>=<sp/>G4Gamma::Gamma();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Element*<sp/>element<sp/>=<sp/>comptonModel-&gt;SelectRandomAtom(couple,<sp/>particle,<sp/>energy0);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>a<sp/>new<sp/>CDF<sp/>needs<sp/>to<sp/>be<sp/>generated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>CDFData<sp/>cdfData;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(energy0<sp/>!=<sp/>fInitialEnergy)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdfData<sp/>=<sp/>CreateCDF(element,<sp/>energy0);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdfData<sp/>=<sp/>cdfDataMap[element];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>minimal<sp/>value<sp/>of<sp/>cos(theta)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>cosThetaMin<sp/>=<sp/>CalculateMinCosTheta(energy0,<sp/>energy_max);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>corresponding<sp/>CDF<sp/>value..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>cdfMin<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it0<sp/>=<sp/>std::lower_bound(cdfData.cosTheta.begin(),<sp/>cdfData.cosTheta.end(),<sp/>cosThetaMin);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it0<sp/>!=<sp/>cdfData.cosTheta.end())<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4int<sp/>idx<sp/>=<sp/>std::distance(cdfData.cosTheta.begin(),<sp/>it0);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdfMin<sp/>=<sp/>cdfData.cdf[idx];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>weight<sp/>=<sp/>1<sp/>-<sp/>cdfMin;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>random<sp/>number<sp/>between<sp/>cdfMin<sp/>and<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>rand<sp/>=<sp/>G4UniformRand()<sp/>*<sp/>(1<sp/>-<sp/>cdfMin)<sp/>+<sp/>cdfMin;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;G4double&gt;&amp;<sp/>cdf<sp/>=<sp/>cdfData.cdf;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;G4double&gt;&amp;<sp/>cosTheta<sp/>=<sp/>cdfData.cosTheta;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::lower_bound(cdf.begin(),<sp/>cdf.end(),<sp/>rand);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>G4int<sp/>idx<sp/>=<sp/>std::distance(cdf.begin(),<sp/>it);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>cosThetaVal<sp/>=<sp/>cosTheta.back();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idx<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>idx<sp/>&lt;<sp/>cdf.size())<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>t1<sp/>=<sp/>cdf[idx<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>t2<sp/>=<sp/>cdf[idx];</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>cosTheta1<sp/>=<sp/>cosTheta[idx<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>cosTheta2<sp/>=<sp/>cosTheta[idx];</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cosThetaVal<sp/>=<sp/>cosTheta1<sp/>+<sp/>(cosTheta2<sp/>-<sp/>cosTheta1)<sp/>*<sp/>(rand<sp/>-<sp/>t1)<sp/>/<sp/>(t2<sp/>-<sp/>t1);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(cosThetaVal,weight);</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">G4double<sp/>GammaRayHelper::CalculateComptonEnergy(G4double<sp/>energy0,<sp/>G4double<sp/>cosTheta)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>energy1<sp/>=<sp/>energy0<sp/>/<sp/>(1<sp/>+<sp/>energy0<sp/>/<sp/>(511<sp/>*<sp/>keV)<sp/>*<sp/>(1<sp/>-<sp/>cosTheta));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>energy1;<sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">G4double<sp/>GammaRayHelper::CalculateMinCosTheta(G4double<sp/>energy0,<sp/>G4double<sp/>maxDeposition)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>maxDeposition<sp/>is<sp/>larger<sp/>than<sp/>the<sp/>energy,<sp/>the<sp/>minimum<sp/>cosTheta<sp/>is<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxDeposition<sp/>&gt;=<sp/>energy0)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>minCosTheta<sp/>=<sp/>1.0<sp/>-<sp/>511<sp/>*<sp/>keV<sp/>*<sp/>maxDeposition<sp/>/<sp/>energy0<sp/>/<sp/>(energy0<sp/>-<sp/>maxDeposition);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minCosTheta<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minCosTheta<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minCosTheta<sp/>&lt;<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minCosTheta<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minCosTheta;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">G4ThreeVector<sp/>GammaRayHelper::CalculateNewDirection(G4ThreeVector<sp/>direction,<sp/>G4double<sp/>cosTheta)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>G4double<sp/>phi<sp/>=<sp/>twopi<sp/>*<sp/>G4UniformRand();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>G4double<sp/>cosPhi<sp/>=<sp/>std::cos(phi);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>G4double<sp/>sinPhi<sp/>=<sp/>std::sin(phi);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>G4double<sp/>sinTheta<sp/>=<sp/>std::sqrt(1<sp/>-<sp/>cosTheta<sp/>*<sp/>cosTheta);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>G4ThreeVector<sp/>newDirection(sinTheta<sp/>*<sp/>cosPhi,<sp/>sinTheta<sp/>*<sp/>sinPhi,<sp/>cosTheta);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>the<sp/>magic<sp/>happens.<sp/>The<sp/>new<sp/>direction<sp/>rotated<sp/>towards<sp/>the<sp/>original<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>G4ThreeVector<sp/>rotationAxis<sp/>=<sp/>G4ThreeVector(0,<sp/>0,<sp/>1).cross(direction);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>G4double<sp/>rotationAngle<sp/>=<sp/>std::acos(G4ThreeVector(0,<sp/>0,<sp/>1).dot(direction));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>G4RotationMatrix<sp/>rotationMatrix;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>rotationMatrix.rotate(rotationAngle,<sp/>rotationAxis);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>the<sp/>new<sp/>direction<sp/>back<sp/>to<sp/>the<sp/>original<sp/>coordinate<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>newDirection<sp/>=<sp/>rotationMatrix<sp/>*<sp/>newDirection;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newDirection;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal">InteractionData<sp/><ref refid="classGammaRayHelper_1a5f490056674be18ba926a76bf683a521" kindref="member">GammaRayHelper::DoComptonScatter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Step*<sp/>step,<sp/>G4ThreeVector<sp/>x0,<sp/>G4double<sp/>energy_max)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>gamma<sp/>ray<sp/>energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>energy0<sp/>=<sp/>step-&gt;GetPreStepPoint()-&gt;GetKineticEnergy();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>the<sp/>Compton<sp/>scattering<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="classGammaRayHelper_1a5984998d3bf8181e5ed84e0d26a0d9d0" kindref="member">GenerateComptonAngle</ref>(step,<sp/>energy_max);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>cosTheta<sp/>=<sp/>result.first;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>weight<sp/>=<sp/>result.second;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>energy<sp/>of<sp/>the<sp/>scattered<sp/>gamma<sp/>ray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>energy1<sp/>=<sp/>CalculateComptonEnergy(energy0,<sp/>cosTheta);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>new<sp/>direction<sp/>of<sp/>the<sp/>gamma<sp/>ray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ThreeVector<sp/>direction<sp/>=<sp/>CalculateNewDirection(step-&gt;GetPreStepPoint()-&gt;GetMomentumDirection(),<sp/>cosTheta);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>//<sp/>G4cout<sp/>&lt;&lt;<sp/>&quot;Compton<sp/>scattering:<sp/>&quot;<sp/>&lt;&lt;<sp/>energy0/keV<sp/>&lt;&lt;<sp/>&quot;<sp/>-&gt;<sp/>&quot;<sp/>&lt;&lt;<sp/>energy1/keV<sp/>&lt;&lt;<sp/>&quot;<sp/>cos(theta)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>cosTheta<sp/>&lt;&lt;<sp/>&quot;<sp/>weight<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>weight<sp/>&lt;&lt;<sp/>&quot;<sp/>emax<sp/>=<sp/>&quot;&lt;&lt;energy_max/keV&lt;&lt;G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>InteractionData<sp/>data;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>data.x0<sp/>=<sp/>x0;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>data.dir<sp/>=<sp/>direction;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>data.energy<sp/>=<sp/>energy1;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>data.energyDeposited<sp/>=<sp/>energy0<sp/>-<sp/>energy1;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>data.cosTheta<sp/>=<sp/>cosTheta;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>data.weight<sp/>=<sp/>weight;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>data.hit<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Hit();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">std::pair&lt;G4ThreeVector,<sp/>G4double&gt;<sp/><ref refid="classGammaRayHelper_1a749f2c6ac264a6065ca97de71443e9f0" kindref="member">GammaRayHelper::GenerateInteractionPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Step<sp/>*step)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>energy<sp/>of<sp/>the<sp/>particle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>G4double<sp/>energy<sp/>=<sp/>step-&gt;GetPreStepPoint()-&gt;GetKineticEnergy();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>G4LogicalVolume*<sp/>volume_pre<sp/>=<sp/>step-&gt;GetPreStepPoint()-&gt;GetTouchableHandle()-&gt;GetVolume()-&gt;GetLogicalVolume();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>G4Material*<sp/>material<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>volume_pre-&gt;GetMaterial();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>G4double<sp/>attenuation_length<sp/>=<sp/><ref refid="classGammaRayHelper_1aac1da704b4d19dc2aef4546db557cce9" kindref="member">GetAttenuationLength</ref>(energy,<sp/>material);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>possible<sp/>distance....</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>G4double<sp/>maxDistance<sp/>=<sp/>step-&gt;GetStepLength();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>entrance<sp/>and<sp/>exit<sp/>points<sp/>of<sp/>the<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>G4ThreeVector<sp/>entrance<sp/>=<sp/>step-&gt;GetPreStepPoint()-&gt;GetPosition();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>G4ThreeVector<sp/>exit<sp/>=<sp/>step-&gt;GetPostStepPoint()-&gt;GetPosition();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>a<sp/>random<sp/>distance<sp/>along<sp/>the<sp/>line<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>G4double<sp/>rand<sp/>=<sp/>G4UniformRand();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>want<sp/>to<sp/>generate<sp/>a<sp/>hit<sp/>inside<sp/>teh<sp/>fiducial<sp/>volume.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Therefore<sp/>there<sp/>is<sp/>a<sp/>maximum<sp/>to<sp/>the<sp/>CDF<sp/>that<sp/>we<sp/>can<sp/>generate:<sp/>this<sp/>is<sp/>returned<sp/>for<sp/>weighing<sp/>the<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>G4double<sp/>maxCDF<sp/>=<sp/>1<sp/>-<sp/>std::exp(-maxDistance<sp/>/<sp/>attenuation_length);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>G4double<sp/>adjustedRand<sp/>=<sp/>rand<sp/>*<sp/>maxCDF;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>G4double<sp/>distance<sp/>=<sp/>-attenuation_length<sp/>*<sp/>std::log(1<sp/>-<sp/>adjustedRand);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>G4ThreeVector<sp/>interactionPoint<sp/>=<sp/>entrance<sp/>+<sp/>(exit<sp/>-<sp/>entrance).unit()<sp/>*<sp/>distance;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(interactionPoint,maxCDF);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/GammaRayHelper.cc"/>
  </compounddef>
</doxygen>
