<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="EventAction_8cc" kind="file" language="C++">
    <compoundname>EventAction.cc</compoundname>
    <includes refid="EventAction_8hh" local="yes">EventAction.hh</includes>
    <includes refid="RunAction_8hh" local="yes">RunAction.hh</includes>
    <includes local="yes">G4Event.hh</includes>
    <includes local="yes">G4RunManager.hh</includes>
    <includes local="yes">G4AnalysisManager.hh</includes>
    <includes local="yes">G4EventManager.hh</includes>
    <includes local="yes">G4TransportationManager.hh</includes>
    <includes local="yes">G4VPhysicalVolume.hh</includes>
    <includes local="yes">G4LogicalVolume.hh</includes>
    <includes local="yes">G4Navigator.hh</includes>
    <includes local="yes">G4SDManager.hh</includes>
    <includes refid="Hit_8hh" local="yes">Hit.hh</includes>
    <includes refid="GammaRayHelper_8hh" local="yes">GammaRayHelper.hh</includes>
    <incdepgraph>
      <node id="7">
        <label>Cluster.hh</label>
        <link refid="Cluster_8hh"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>EventAction.hh</label>
        <link refid="EventAction_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ExtendedLivermoreComptonModel.hh</label>
        <link refid="ExtendedLivermoreComptonModel_8hh"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>GammaRayHelper.hh</label>
        <link refid="GammaRayHelper_8hh"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Hit.hh</label>
        <link refid="Hit_8hh"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>RunAction.hh</label>
        <link refid="RunAction_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>RunActionMessenger.hh</label>
        <link refid="RunActionMessenger_8hh"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/EventAction.cc</label>
        <link refid="EventAction_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>G4Accumulable.hh</label>
      </node>
      <node id="11">
        <label>G4Allocator.hh</label>
      </node>
      <node id="34">
        <label>G4AnalysisManager.hh</label>
      </node>
      <node id="26">
        <label>G4AutoLock.hh</label>
      </node>
      <node id="25">
        <label>G4DataVector.hh</label>
      </node>
      <node id="18">
        <label>G4DynamicParticle.hh</label>
      </node>
      <node id="41">
        <label>G4Event.hh</label>
      </node>
      <node id="43">
        <label>G4EventManager.hh</label>
      </node>
      <node id="15">
        <label>G4LivermoreComptonModel.hh</label>
      </node>
      <node id="20">
        <label>G4LivermorePhotoElectricModel.hh</label>
      </node>
      <node id="21">
        <label>G4LivermoreRayleighModel.hh</label>
      </node>
      <node id="46">
        <label>G4LogicalVolume.hh</label>
      </node>
      <node id="22">
        <label>G4Material.hh</label>
      </node>
      <node id="17">
        <label>G4MaterialCutsCouple.hh</label>
      </node>
      <node id="47">
        <label>G4Navigator.hh</label>
      </node>
      <node id="23">
        <label>G4PhysicalConstants.hh</label>
      </node>
      <node id="42">
        <label>G4RunManager.hh</label>
      </node>
      <node id="48">
        <label>G4SDManager.hh</label>
      </node>
      <node id="28">
        <label>G4Step.hh</label>
      </node>
      <node id="5">
        <label>G4String.hh</label>
      </node>
      <node id="24">
        <label>G4SystemOfUnits.hh</label>
      </node>
      <node id="12">
        <label>G4THitsCollection.hh</label>
      </node>
      <node id="4">
        <label>G4ThreeVector.hh</label>
      </node>
      <node id="27">
        <label>G4Track.hh</label>
      </node>
      <node id="44">
        <label>G4TransportationManager.hh</label>
      </node>
      <node id="6">
        <label>G4Types.hh</label>
      </node>
      <node id="37">
        <label>G4UIcmdWithABool.hh</label>
      </node>
      <node id="39">
        <label>G4UIcmdWithADoubleAndUnit.hh</label>
      </node>
      <node id="40">
        <label>G4UIcmdWithAString.hh</label>
      </node>
      <node id="38">
        <label>G4UIcmdWithAnInteger.hh</label>
      </node>
      <node id="36">
        <label>G4UImessenger.hh</label>
      </node>
      <node id="3">
        <label>G4UserEventAction.hh</label>
      </node>
      <node id="32">
        <label>G4UserRunAction.hh</label>
      </node>
      <node id="19">
        <label>G4VEMDataSet.hh</label>
      </node>
      <node id="10">
        <label>G4VHit.hh</label>
      </node>
      <node id="45">
        <label>G4VPhysicalVolume.hh</label>
      </node>
      <node id="13">
        <label>globals.hh</label>
      </node>
      <node id="29">
        <label>map</label>
      </node>
      <node id="30">
        <label>mutex</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceG4FastSim">G4FastSim</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>********************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>License<sp/>and<sp/>Disclaimer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>The<sp/><sp/>Geant4<sp/>software<sp/><sp/>is<sp/><sp/>copyright<sp/>of<sp/>the<sp/>Copyright<sp/>Holders<sp/><sp/>of<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>the<sp/>Geant4<sp/>Collaboration.<sp/><sp/>It<sp/>is<sp/>provided<sp/><sp/>under<sp/><sp/>the<sp/>terms<sp/><sp/>and<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>conditions<sp/>of<sp/>the<sp/>Geant4<sp/>Software<sp/>License,<sp/><sp/>included<sp/>in<sp/>the<sp/>file<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>LICENSE<sp/>and<sp/>available<sp/>at<sp/><sp/>http://cern.ch/geant4/license<sp/>.<sp/><sp/>These<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>include<sp/>a<sp/>list<sp/>of<sp/>copyright<sp/>holders.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>authors<sp/>of<sp/>this<sp/>software<sp/>system,<sp/>nor<sp/>their<sp/>employing<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>institutes,nor<sp/>the<sp/>agencies<sp/>providing<sp/>financial<sp/>support<sp/>for<sp/>this<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>work<sp/><sp/>make<sp/><sp/>any<sp/>representation<sp/>or<sp/><sp/>warranty,<sp/>express<sp/>or<sp/>implied,<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>regarding<sp/><sp/>this<sp/><sp/>software<sp/>system<sp/>or<sp/>assume<sp/>any<sp/>liability<sp/>for<sp/>its<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>use.<sp/><sp/>Please<sp/>see<sp/>the<sp/>license<sp/>in<sp/>the<sp/>file<sp/><sp/>LICENSE<sp/><sp/>and<sp/>URL<sp/>above<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>for<sp/>the<sp/>full<sp/>disclaimer<sp/>and<sp/>the<sp/>limitation<sp/>of<sp/>liability.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>This<sp/><sp/>code<sp/><sp/>implementation<sp/>is<sp/>the<sp/>result<sp/>of<sp/><sp/>the<sp/><sp/>scientific<sp/>and<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>technical<sp/>work<sp/>of<sp/>the<sp/>GEANT4<sp/>collaboration.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>By<sp/>using,<sp/><sp/>copying,<sp/><sp/>modifying<sp/>or<sp/><sp/>distributing<sp/>the<sp/>software<sp/>(or<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>any<sp/>work<sp/>based<sp/><sp/>on<sp/>the<sp/>software)<sp/><sp/>you<sp/><sp/>agree<sp/><sp/>to<sp/>acknowledge<sp/>its<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>use<sp/><sp/>in<sp/><sp/>resulting<sp/><sp/>scientific<sp/><sp/>publications,<sp/><sp/>and<sp/>indicate<sp/>your<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>acceptance<sp/>of<sp/>all<sp/>terms<sp/>of<sp/>the<sp/>Geant4<sp/>Software<sp/>license.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>********************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EventAction_8hh" kindref="compound">EventAction.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="RunAction_8hh" kindref="compound">RunAction.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Event.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4RunManager.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4AnalysisManager.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4EventManager.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4TransportationManager.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4VPhysicalVolume.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4LogicalVolume.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Navigator.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4SDManager.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Hit_8hh" kindref="compound">Hit.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="GammaRayHelper_8hh" kindref="compound">GammaRayHelper.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//using<sp/>namespace<sp/>G4FastSim;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceG4FastSim" kindref="compound">G4FastSim</ref><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//std::mutex<sp/>EventAction::mtx;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="classEventAction_1a9a8515b9069293b94b72a6863c48e6ba" kindref="member">EventAction::EventAction</ref>()<sp/>:<sp/>G4UserEventAction(),<sp/>fGammaRayHelper(&amp;<ref refid="classGammaRayHelper" kindref="compound">GammaRayHelper</ref>::Instance())</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>printing<sp/>per<sp/>each<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>G4RunManager::GetRunManager()-&gt;SetPrintProgress(1);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//fHitsCollectionNames.push_back(&quot;LXeCollection&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>fHitsCollectionNames.push_back(</highlight><highlight class="stringliteral">&quot;LXeFiducialCollection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventAction_1a30ca6a1995cd73bcd15bb9818c49fda0" kindref="member">EventAction::BeginOfEventAction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Event*<sp/>event)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verbosityLevel<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EventAction::BeginOfEventAction.....<sp/>NEXT&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="classEventAction_1af34ccf5d78e8a4139f865954c309f0f6" kindref="member">ResetVariables</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//G4cout&lt;&lt;&quot;EventAction::BeginOfEventAction<sp/>next<sp/>event....&quot;&lt;&lt;G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>G4PrimaryVertex*<sp/>primaryVertex<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;GetPrimaryVertex();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>fXp<sp/>=<sp/>primaryVertex-&gt;GetPosition().x();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>fYp<sp/>=<sp/>primaryVertex-&gt;GetPosition().y();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>fZp<sp/>=<sp/>primaryVertex-&gt;GetPosition().z();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//auto<sp/>def<sp/>=<sp/><sp/>event-&gt;GetPrimaryVertex()-&gt;GetPrimary()-&gt;GetParticleDefinition();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>&quot;<sp/>def<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>def-&gt;GetParticleName()<sp/>&lt;&lt;<sp/>G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verbosityLevel<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EventAction::BeginOfEventAction<sp/>Primary<sp/>vertex:<sp/>x<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>primaryVertex-&gt;GetPosition()<sp/>/<sp/>cm<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(cm)&quot;</highlight><highlight class="normal">&lt;&lt;G4endl;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>primaryVertex-&gt;GetPrimary()-&gt;GetMomentumDirection()<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>E<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>primaryVertex-&gt;GetPrimary()-&gt;GetKineticEnergy()<sp/>/<sp/>keV<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>keV&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classEventAction_1aadb449a0f7a833b44e0136055950c37c" kindref="member">IsFastSimulation</ref>())<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>fGammaRayHelper-&gt;<ref refid="classGammaRayHelper_1a46237b1c1462735a33f905e7aaa66676" kindref="member">InitializeCDFs</ref>(primaryVertex-&gt;GetPrimary()-&gt;GetKineticEnergy());<sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>when<sp/>here<sp/>for<sp/>first<sp/>time<sp/>we<sp/>do<sp/>the<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Kill<sp/>the<sp/>event<sp/>if<sp/>the<sp/>particle<sp/>does<sp/>not<sp/>point<sp/>to<sp/>the<sp/>fiducial<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(!IsWithinFiducialVolume(primaryVertex-&gt;GetPosition(),<sp/>primaryVertex-&gt;GetPrimary()-&gt;GetMomentumDirection())){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>G4cout&lt;&lt;&quot;EventAction::BeginOfEventAction:<sp/>Killing<sp/>event...&quot;&lt;&lt;G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>G4RunManager::GetRunManager()-&gt;AbortEvent();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fInitializedGraphs)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>RunAction<sp/>instance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classRunAction" kindref="compound">RunAction</ref>*<sp/>runAction<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classRunAction" kindref="compound">RunAction</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(G4RunManager::GetRunManager()-&gt;GetUserRunAction());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>e0<sp/>=<sp/>primaryVertex-&gt;GetPrimary()-&gt;GetKineticEnergy();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>runAction-&gt;<ref refid="classRunAction_1a12a1675453301619429fa2b9864ec6d3" kindref="member">DefineDifferentialCrossSectionNtuple</ref>(e0);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>fInitializedGraphs<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EventAction::IsWithinFiducialVolume(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4ThreeVector&amp;<sp/>position,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4ThreeVector&amp;<sp/>direction)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Navigator*<sp/>navigator<sp/>=<sp/>G4TransportationManager::GetTransportationManager()-&gt;GetNavigatorForTracking();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>a<sp/>point<sp/>far<sp/>along<sp/>the<sp/>direction<sp/>to<sp/>ensure<sp/>it<sp/>goes<sp/>through<sp/>the<sp/>volume<sp/>if<sp/>it<sp/>intersects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ThreeVector<sp/>farPoint<sp/>=<sp/>position<sp/>+<sp/>1000<sp/>*<sp/>cm<sp/>*<sp/>direction;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ThreeVector<sp/>intersectionPoint;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>stepLength;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>intersection<sp/>with<sp/>the<sp/>fiducial<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(navigator-&gt;LocateGlobalPointAndSetup(position,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)-&gt;GetLogicalVolume()<sp/>==<sp/>fFiducialVolume)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>far<sp/>point<sp/>intersects<sp/>the<sp/>fiducial<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(navigator-&gt;ComputeStep(position,<sp/>direction,<sp/>1000<sp/>*<sp/>cm,<sp/>stepLength)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intersectionPoint<sp/>=<sp/>position<sp/>+<sp/>stepLength<sp/>*<sp/>direction;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(navigator-&gt;LocateGlobalPointAndSetup(intersectionPoint,<sp/>0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)-&gt;GetLogicalVolume()<sp/>==<sp/>fFiducialVolume)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventAction_1af34ccf5d78e8a4139f865954c309f0f6" kindref="member">EventAction::ResetVariables</ref>()<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>fNumberOfScatters<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>used<sp/>in<sp/>the<sp/>standard<sp/>MC<sp/>to<sp/>see<sp/>if<sp/>the<sp/>gamma<sp/>ray<sp/>has<sp/>already<sp/>been<sp/>in<sp/>xenon<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>fHasBeenInXenon<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>type<sp/>of<sp/>event:<sp/>&quot;direct_gamma<sp/>(=0)&quot;,<sp/><sp/>&quot;scattered_gamma<sp/>(=1)&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>set<sp/>to<sp/>&quot;direct_gamma&quot;<sp/>in<sp/>the<sp/>beginning<sp/>and<sp/>changed<sp/>to<sp/>&quot;scattered_gamma&quot;<sp/>if<sp/>a<sp/>scatter<sp/>is<sp/>made<sp/><sp/><sp/>prior<sp/>to<sp/>entering<sp/>the<sp/>xenon<sp/>target<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>fEventType<sp/>=<sp/>DIRECT_GAMMA;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>avalaible<sp/>energy<sp/>is<sp/>the<sp/>maximum<sp/>energy<sp/>that<sp/>can<sp/>be<sp/>deposited<sp/>in<sp/>the<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>will<sp/>be<sp/>reduced<sp/>after<sp/>every<sp/>energy<sp/>deposit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>fAvailableEnergy<sp/>=<sp/>fMaxEnergy;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>&quot;EventAction::ResetVariables:<sp/>fAvailableEnergy<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>fAvailableEnergy<sp/>&lt;&lt;<sp/>G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>&quot;EventAction::ResetVariables:<sp/>fMaxEnergy<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>fMaxEnergy<sp/>&lt;&lt;<sp/>G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>fEdep<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>fLogWeight<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>fNclusters<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>fNphot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>fNcomp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>fXp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>fYp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>fZp<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>fEd.clear();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>fX.clear();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>fY.clear();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>fZ.clear();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>fW.clear();</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventAction_1ac644b336bd2c1ab896db5c2089a06364" kindref="member">EventAction::EndOfEventAction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Event*<sp/>event)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verbosityLevel&gt;0)<sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EventAction::EndOfEventAction.....<sp/>Analyze<sp/>hits<sp/>and<sp/>cluster....&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><ref refid="classEventAction_1ac561e43e535456a5d2bb2958e6c7c0af" kindref="member">AnalyzeHits</ref>(event);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>no<sp/>scatters<sp/>were<sp/>made<sp/>we<sp/>are<sp/>dealing<sp/>with<sp/>an<sp/>event<sp/>that<sp/>did<sp/>nothing<sp/>inside<sp/>the<sp/>fiducial<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>such<sp/>an<sp/>event<sp/>should<sp/>have<sp/>a<sp/>weight=1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fNumberOfScatters<sp/>==<sp/>0)<sp/>fLogWeight<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Event*<sp/>currentEvent<sp/>=<sp/>G4EventManager::GetEventManager()-&gt;GetConstCurrentEvent();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>fEventID<sp/>=<sp/>currentEvent-&gt;GetEventID();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verbosityLevel&lt;0)<sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EventAction::EndOfEventAction.....<sp/>Fill<sp/>ntuple....&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>analysis<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>analysisManager<sp/>=<sp/>G4AnalysisManager::Instance();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::lock_guard&lt;std::mutex&gt;<sp/>lock(mtx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>energy<sp/>depositis<sp/>in<sp/>keV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>analysisManager-&gt;FillNtupleDColumn(0,<sp/>0,<sp/>fEventID);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>analysisManager-&gt;FillNtupleDColumn(0,<sp/>1,<sp/>fNclusters);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>analysisManager-&gt;FillNtupleDColumn(0,<sp/>2,<sp/>fNphot);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>analysisManager-&gt;FillNtupleDColumn(0,<sp/>3,<sp/>fNcomp);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>analysisManager-&gt;FillNtupleDColumn(0,<sp/>4,<sp/>fEdep);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>analysisManager-&gt;FillNtupleDColumn(0,<sp/>5,<sp/>fLogWeight);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>analysisManager-&gt;FillNtupleDColumn(0,<sp/>6,<sp/>fEventType);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>analysisManager-&gt;FillNtupleDColumn(0,<sp/>7,<sp/>fXp);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>analysisManager-&gt;FillNtupleDColumn(0,<sp/>8,<sp/>fYp);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>analysisManager-&gt;FillNtupleDColumn(0,<sp/>9,<sp/>fZp);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>analysisManager-&gt;AddNtupleRow(0);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verbosityLevel&gt;0)<sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EventAction::EndOfEventAction:<sp/>Done....&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classEventAction_1ac561e43e535456a5d2bb2958e6c7c0af" kindref="member">EventAction::AnalyzeHits</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Event*<sp/>event)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>G4HCofThisEvent*<sp/>HCE<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;GetHCofThisEvent();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!HCE)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4ExceptionDescription<sp/>msg;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>hits<sp/>collection<sp/>of<sp/>this<sp/>event<sp/>found.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4Exception(</highlight><highlight class="stringliteral">&quot;EventAction::EndOfEventAction()&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;MyCode0001&quot;</highlight><highlight class="normal">,<sp/>JustWarning,<sp/>msg);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>std::vector&lt;Hit*&gt;<sp/>allHits;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fHitsCollectionNames.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4int<sp/>hcID<sp/>=<sp/>G4SDManager::GetSDMpointer()-&gt;GetCollectionID(fHitsCollectionNames[i]);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*fHitsCollection<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespaceG4FastSim_1a03dccfbb4e25fe6f2ab3468c33175a36" kindref="member">HitsCollection</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(HCE-&gt;GetHC(hcID));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fHitsCollection)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4int<sp/>n_hit<sp/>=<sp/>fHitsCollection-&gt;entries();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verbosityLevel&gt;0)<sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Hits<sp/>Collection:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fHitsCollectionNames[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>n_hit<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>hits.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(G4int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_hit;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hit*<sp/>hit<sp/>=<sp/>(*fHitsCollection)[j];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if(verbosityLevel&gt;0)<sp/>hit-&gt;Print();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allHits.push_back(hit);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cluster<sp/>hits<sp/>based<sp/>on<sp/>spatial<sp/>and<sp/>time<sp/>thresholds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>std::vector&lt;Cluster&gt;<sp/>fClusters;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>G4double<sp/>spatialThreshold<sp/>=<sp/>0.5<sp/>*<sp/>cm;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>G4double<sp/>timeThreshold<sp/>=<sp/>2.0<sp/>*<sp/>ns;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>ClusterHits(allHits,<sp/>spatialThreshold,<sp/>timeThreshold,<sp/>fClusters);<sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">G4double<sp/>EventAction::CalculateDistance(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4ThreeVector&amp;<sp/>pos1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4ThreeVector&amp;<sp/>pos2)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(pos1<sp/>-<sp/>pos2).mag();</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">G4double<sp/>EventAction::CalculateTimeDifference(G4double<sp/>time1,<sp/>G4double<sp/>time2)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::fabs(time1<sp/>-<sp/>time2);</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EventAction::ClusterHits(std::vector&lt;Hit*&gt;&amp;<sp/>hits,<sp/>G4double<sp/>spatialThreshold,<sp/>G4double<sp/>timeThreshold,<sp/>std::vector&lt;Cluster&gt;&amp;<sp/>clusters)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hits.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>hits,<sp/>nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>earliest<sp/>hit<sp/>time<sp/>to<sp/>normalize<sp/>times<sp/>relative<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>startTime<sp/>=<sp/>hits[0]-&gt;time;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>hit<sp/>:<sp/>hits)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hit-&gt;time<sp/>&lt;<sp/>startTime)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>hit-&gt;time;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>hit<sp/>times<sp/>to<sp/>the<sp/>start<sp/>of<sp/>the<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>hit<sp/>:<sp/>hits)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hit-&gt;time<sp/>-=<sp/>startTime;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4cout&lt;&lt;G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4cout&lt;&lt;&quot;ClusterHits:<sp/>hits.size()<sp/>=<sp/>&quot;&lt;&lt;hits.size()&lt;&lt;G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finding<sp/>the<sp/>cluster<sp/>seeds.<sp/>A<sp/>cluster<sp/>seed<sp/>is<sp/>a<sp/>hit<sp/>from<sp/>a<sp/>primary<sp/>track<sp/>doing<sp/>a<sp/>Compton<sp/>or<sp/>photoelectric<sp/>interaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>fast<sp/>simulation<sp/>the<sp/>primary<sp/>track<sp/>can<sp/>have<sp/>another<sp/>trackID,<sp/>so<sp/>we<sp/>do<sp/>not<sp/>need<sp/>to<sp/>check<sp/>the<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>hit<sp/>:<sp/>hits){<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4String<sp/>process<sp/>=<sp/>hit-&gt;processType;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4int<sp/>trackID<sp/>=<sp/>hit-&gt;trackID;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4bool<sp/>isRelevantProcess<sp/>=<sp/>(process<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;compt&quot;</highlight><highlight class="normal"><sp/>||<sp/>process<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;phot&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4bool<sp/>isPrimaryTrack<sp/>=<sp/>(trackID<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classEventAction_1aadb449a0f7a833b44e0136055950c37c" kindref="member">IsFastSimulation</ref>()<sp/>||<sp/>isPrimaryTrack)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(process<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;compt&quot;</highlight><highlight class="normal">)<sp/>fNcomp++;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(process<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;phot&quot;</highlight><highlight class="normal">)<sp/>fNphot++;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isRelevantProcess)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusters.push_back(Cluster{hit-&gt;position,<sp/>hit-&gt;energyDeposit,<sp/>hit-&gt;time,<sp/>{hit}});</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hit-&gt;used<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clustering<sp/>the<sp/>hits,<sp/>with<sp/>the<sp/>seeds<sp/>already<sp/>in<sp/>the<sp/>cluster<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>hit<sp/>:<sp/>hits)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verbosityLevel&gt;0<sp/>&amp;&amp;<sp/>(fNcomp+fNphot<sp/>==<sp/>1))<sp/>hit-&gt;Print();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hit-&gt;used)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addedToCluster<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cluster<sp/>:<sp/>clusters)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CalculateDistance(hit-&gt;position,<sp/>cluster.position)<sp/>&lt;<sp/>spatialThreshold<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CalculateTimeDifference(hit-&gt;time,<sp/>cluster.time)<sp/>&lt;<sp/>timeThreshold)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>energyDeposit<sp/>=<sp/>hit-&gt;energyDeposit;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(energyDeposit<sp/>&gt;<sp/>0*eV)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4int<sp/>clusterSize<sp/>=<sp/>cluster.hits.size();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cluster.position<sp/>=<sp/>(cluster.position<sp/>*<sp/>clusterSize<sp/>+<sp/>hit-&gt;position)<sp/>/<sp/>(clusterSize<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cluster.energyDeposit<sp/>+=<sp/>energyDeposit;<sp/></highlight><highlight class="comment">//<sp/>Sum<sp/>energy<sp/>deposits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cluster.time<sp/>=<sp/>(cluster.time<sp/>*<sp/>clusterSize<sp/>+<sp/>hit-&gt;time)<sp/>/<sp/>(clusterSize<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>Update<sp/>average<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cluster.hits.push_back(hit);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addedToCluster<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>hit<sp/>was<sp/>not<sp/>added<sp/>to<sp/>any<sp/>existing<sp/>cluster,<sp/>create<sp/>a<sp/>new<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!addedToCluster)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusters.push_back(Cluster{hit-&gt;position,<sp/>hit-&gt;energyDeposit,<sp/>hit-&gt;time,<sp/>{hit}});</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>close<sp/>clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>clusters.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/>clusters.size();<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CalculateDistance(clusters[i].position,<sp/>clusters[j].position)<sp/>&lt;<sp/>spatialThreshold<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CalculateTimeDifference(clusters[i].time,<sp/>clusters[j].time)<sp/>&lt;<sp/>timeThreshold)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>cluster<sp/>j<sp/>into<sp/>cluster<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4int<sp/>totalHits<sp/>=<sp/>clusters[i].hits.size()<sp/>+<sp/>clusters[j].hits.size();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusters[i].position<sp/>=<sp/>(clusters[i].position<sp/>*<sp/>clusters[i].hits.size()<sp/>+<sp/>clusters[j].position<sp/>*<sp/>clusters[j].hits.size())<sp/>/<sp/>totalHits;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusters[i].energyDeposit<sp/>+=<sp/>clusters[j].energyDeposit;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusters[i].time<sp/>=<sp/>(clusters[i].time<sp/>*<sp/>clusters[i].hits.size()<sp/>+<sp/>clusters[j].time<sp/>*<sp/>clusters[j].hits.size())<sp/>/<sp/>totalHits;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusters[i].hits.insert(clusters[i].hits.end(),<sp/>clusters[j].hits.begin(),<sp/>clusters[j].hits.end());</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>cluster<sp/>j</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clusters.erase(clusters.begin()<sp/>+<sp/>j);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;<sp/></highlight><highlight class="comment">//<sp/>Only<sp/>increment<sp/>if<sp/>no<sp/>merge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4cout<sp/>&lt;&lt;<sp/>&quot;Number<sp/>of<sp/>clusters:<sp/>&quot;<sp/>&lt;&lt;<sp/>clusters.size()<sp/>&lt;&lt;<sp/>G4endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>cluster<sp/>positions<sp/>and<sp/>store<sp/>into<sp/>ntuple<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>fNclusters<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cluster<sp/>:<sp/>clusters)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(verbosityLevel&gt;1<sp/><sp/>&amp;&amp;<sp/>(fNcomp+fNphot<sp/>==<sp/>1)){</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;Cluster:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cluster.position<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energyDeposit:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cluster.energyDeposit<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fLogWeight<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cluster.position<sp/>/=<sp/>cluster.hits.size();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cluster.energyDeposit<sp/>&gt;<sp/>0*eV)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fNclusters++;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fEdep<sp/>+=<sp/>cluster.energyDeposit<sp/>/<sp/>keV;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fEd.push_back(cluster.energyDeposit<sp/>/<sp/>keV);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fX.push_back(cluster.position.x());</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fY.push_back(cluster.position.y());</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fZ.push_back(cluster.position.z());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fW.push_back(fLogWeight);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>the<sp/>weird<sp/>events<sp/>that<sp/>I<sp/>do<sp/>not<sp/>understand.......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((1==0)<sp/>&amp;&amp;<sp/>(fEdep<sp/>&lt;<sp/>800.0)<sp/>&amp;&amp;<sp/>(fEdep<sp/>&gt;<sp/>0.0)<sp/>&amp;&amp;<sp/>(fNphot<sp/>==<sp/>1<sp/>)<sp/>&amp;&amp;<sp/>(fEventType<sp/>==<sp/>DIRECT_GAMMA)<sp/>&amp;&amp;<sp/>(fNcomp<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EventAction::ClusterHits:<sp/>fEdep<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fEdep<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EventAction::ClusterHits:<sp/>fNphot<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fNphot<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EventAction::ClusterHits:<sp/>fNcomp<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fNcomp<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EventAction::ClusterHits:<sp/>fEventType<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fEventType<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EventAction::ClusterHits:<sp/>fNclusters<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fNclusters<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cluster<sp/>:<sp/>clusters)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cluster:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cluster.position<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energyDeposit:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>cluster.energyDeposit<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fLogWeight<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>hit<sp/>:<sp/>hits)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hit-&gt;Print();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>G4FastSim</highlight></codeline>
    </programlisting>
    <location file="src/EventAction.cc"/>
  </compounddef>
</doxygen>
